name: api_yamdb workflow

on:
  push:
    branches:
      - "master"

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Setup PostgreSQL
        uses: ikalnytskyi/action-setup-postgres@v4
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.7
      - name: Install dependencies
        run: | 
          python -m pip install --upgrade pip 
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          pip install -r api_yamdb/requirements.txt
      - name: Test with flake8 and django tests
        env:
          DB_HOST: localhost
        run: |
          python -m flake8
          cd api_yamdb/
          pytest
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: ./api_yamdb
          push: true
          tags: ${{ secrets.DOCKER_REPO }}:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        env:
          DB_ENGINE: ${{ secrets.DB_ENGINE }}
          DB_NAME: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          MY_DOMAIN: ${{ secrets.MY_DOMAIN }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ${{ secrets.SERVER_PASSPHRASE }}
          envs:
            DB_ENGINE,
            DB_NAME,
            POSTGRES_USER,
            POSTGRES_PASSWORD,
            DB_HOST, DB_PORT,
            DJANGO_SECRET_KEY,
            SERVER_HOST,
            MY_DOMAIN
          script: |
            sudo docker compose up --no-recreate -d
            sudo docker compose up --no-deps -d web
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!