name: api_yamdb workflow

on: push

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Setup PostgreSQL
        uses: ikalnytskyi/action-setup-postgres@v4
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.7
          cache: "pip"
      - name: Install dependencies
        run: | 
          python -m pip install --upgrade pip 
          pip install flake8==3.5 pep8-naming flake8-broken-line flake8-return flake8-isort==3.0.1 -r api_yamdb/requirements.txt
      - name: Test with flake8
        run:
          python -m flake8 --ignore W503, I001 --exclude api_yamdb/tests/, tests/, */migrations/ --max-complexity 10
      - name: Django tests
        env:
          DB_HOST: localhost
        run:
          cd api_yamdb/
          pytest
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Push to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: ./api_yamdb
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          push: true
          tags: ${{ secrets.DOCKER_REPO }}:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SERVER_PASSPHRASE }}
          script: |
            echo ${{ secrets.ENV_FILE }} > ./.env
            docker pull ${{ secrets.DOCKER_REPO }}:latest
            docker compose up -d
            docker compose exec web python manage.py collectstatic --no-input
            docker compose exec web python manage.py migrate
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!
